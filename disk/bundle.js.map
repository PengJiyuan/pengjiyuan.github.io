{"version":3,"file":"bundle.js","sources":["webpack:///bundle.js"],"sourcesContent":["!function(s){function e(n){if(a[n])return a[n].exports;var p=a[n]={exports:{},id:n,loaded:!1};return s[n].call(p.exports,p,p.exports,e),p.loaded=!0,p.exports}var a={};return e.m=s,e.c=a,e.p=\"\",e(0)}([function(s,e,a){\"use strict\";a(3),a(5),a(6),a(7);var n=a(8),p=a(10),o=document.getElementById(\"container\");o.innerHTML=p,n()},,,function(s,e){},,function(s,e){},function(s,e){},function(s,e){},function(s,e,a){\"use strict\";var n=a(9);s.exports=function(){function s(s){var e=Math.ceil(Math.random()*t),a=Math.ceil(Math.random()*c),n=+(Math.random()*s+8).toFixed(4),p=+(2*Math.random()-1).toFixed(4),o=+(2*Math.random()-1).toFixed(4);return{x:e,y:a,r:n,rateX:p,rateY:o}}function e(){r.forEach(function(e,a){l.beginPath(),l.arc(e.x,e.y,e.r,0,2*Math.PI,!1),l.fillStyle=\"rgba(255, 255, 255, \"+(e.r-8)/4+\")\",l.fill(),e.x>-15&&e.x<t+15&&e.y>-15&&e.y<c+15?(e.x+=.4*e.rateX,e.y+=.4*e.rateY):(r.splice(a,1),r.push(s(5)))})}function a(s,e,a,n){var p=Math.abs(s-a),o=Math.abs(e-n);return Math.sqrt(p*p+o*o)}function p(){for(var s=0,e=r.length;s<e;s++)for(var n=e-1;n>=0;n--){var p=r[s].x,o=r[s].y,t=r[n].x,c=r[n].y,h=a(p,o,t,c);h<=i&&(l.beginPath(),l.moveTo(p,o),l.lineTo(t,c),l.strokeStyle=d,l.lineWidth=1-h/i,l.stroke())}}var o=n.selectOne(\"#header_bg\"),l=o.getContext(\"2d\"),t=document.body.clientWidth,c=parseInt(n.getStyle(n.selectOne(\"header\")).height),r=[],i=400,d=\"rgba(255, 255, 255, 0.5)\";o.width=t,o.height=c;for(var h=0;h<10;h++)r.push(s(5));!function s(){l.clearRect(0,0,t,c),e(),p(),window.requestAnimationFrame(s)}()}},function(s,e){\"use strict\";s.exports={selectOne:function(s){return document.querySelector(s)},selectAll:function(s){return document.querySelectorAll(s)},getStyle:function(s){return s.currentStyle?s.currentStyle:document.defaultView.getComputedStyle(s,null)}}},function(s,e){s.exports='<h1 id=-ubuntu->环境搭建(Ubuntu下)：</h1> <p><strong>[包括nvm，git，grunt，webpack，sublime，google-chrome，vpn，gnome-pie的安装和配置]</strong> </p> <hr> <h2 id=nvm->nvm的搭建</h2> <p><code>$ cd ~/git</code><br><code>$ git clone https://github.com/creationix/nvm.git</code> </p> <p>配置终端启动时自动执行 <code>source ~/git/nvm/nvm.sh</code>, 在 <code>~/.bashrc</code>, <code>~/.bash_profile</code>, <code>~/.profile</code>, 或者 <code>~/.zshrc</code> 文件添加以下命令: </p> <p><code>source ~/git/nvm/nvm.sh</code> </p> <p><strong>或者：</strong> </p> <p><code>wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.31.2/install.sh | bash</code> </p> <p>在 <code>~/.bashrc</code>, <code>~/.bash_profile</code>, <code>~/.profile</code>, 或者 <code>~/.zshrc</code> 文件添加以下命令:</p> <p><code>source ./.nvm/nvm.sh</code> </p> <p>然后输入在控制台输入 <code>nvm</code> 查看是否安装成功吧～ </p> <hr> <h2 id=-nvm->常见nvm命令：</h2> <h3 id=1-node->1. 安装node：</h3> <blockquote> <p><code>nvm install &lt;version&gt;</code> </p> <p>nvm 默认是从 <a href=http://nodejs.org/dist/ >http://nodejs.org/dist/</a> 下载的, 国外服务器, 必然很慢, 好在 nvm以及支持从镜像服务器下载包, 于是我们可以方便地从七牛的 node dist 镜像下载: </p> <p><code>NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node nvm install 5</code> </p> <p>5是5.xx版本的意思，6即是6.xx版本，也可以指定版本如5.9.1 </p> </blockquote> <h3 id=2-node->2. 查看node版本</h3> <p><code>nvm ls</code> </p> <p>列出你安装的所有版本的node以及当前你所用的node版本，还有你默认的node版本。 </p> <h3 id=3-node->3. 切换node版本</h3> <p><code>nvm use version</code> </p> <h3 id=4->4. 设置默认版本</h3> <p><code>nvm alias default v5.9.0</code> </p> <hr> <h2 id=git->git安装及配置</h2> <h3 id=1-git>1. 安装git</h3> <pre><code class=lang-bash>$ sudo apt-<span class=hljs-keyword>get</span> install git\\n</code></pre> <h3 id=2-git>2. 配置git</h3> <pre><code class=lang-bash><span class=hljs-string>$ </span>git config --global user.name <span class=hljs-comment>\"your name\"</span>\\n\\n<span class=hljs-string>$ </span>git config --global user.email <span class=hljs-comment>\"your email\"</span>\\n</code></pre> <h3 id=3-ssh-key>3. 创建SSH Key</h3> <pre><code class=lang-bash>$ ssh-keygen -t rsa -C <span class=hljs-string>\"youremail@example.com\"</span>     \\n\\n$ cd ~/.ssh    可以看到id_rsa(私钥)和id_rsa.<span class=hljs-keyword>pub</span>(公钥)，将id_rsa.<span class=hljs-keyword>pub</span>的内容添加到    \\n\\nGitHub-&gt;Account-settings-&gt;SSH Keys中\\n</code></pre> <h3 id=4-windows-git->4. windows下配置git：</h3> <pre><code class=lang-bash><span class=hljs-string>$ </span><span class=hljs-type>Git</span> config --global user.name <span class=hljs-comment>\"your name\"</span>    \\n\\n<span class=hljs-string>$ </span>git config --global user.email <span class=hljs-comment>\"your email\"</span>\\n</code></pre> <p><strong>创建SSH Key:</strong> </p> <p>不同于linux，window没有~/.ssh，需要生成秘钥到/c/Users/Administrator/.ssh。 </p> <p>进入/c/Users/Administrator/.ssh目录，<code>ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code> ,接下来同linux操作。</p> <hr> <h2 id=grunt->grunt的安装和配置：</h2> <p>安装grunt和grunt-cli </p> <pre><code class=lang-bash>$ npm <span class=hljs-keyword>install</span> -g grunt-cli    \\n\\n$ npm <span class=hljs-keyword>install</span> grunt -g\\n</code></pre> <p>安装grunt插件 </p> <pre><code class=lang-bash>$ npm install &lt;<span class=hljs-class><span class=hljs-keyword>module</span>&gt; --<span class=hljs-title>save</span>-<span class=hljs-title>dev</span></span>\\n</code></pre> <hr> <h2 id=webpack->webpack的安装和使用</h2> <h3 id=1->1. 安装</h3> <pre><code class=lang-bash>$ npm <span class=hljs-keyword>install</span> webpack -g    \\n\\n$ pm <span class=hljs-keyword>install</span> webpack <span class=hljs-comment>--save-dev</span>\\n</code></pre> <h3 id=2->2. 命令行操作</h3> <pre><code class=lang-bash><span class=hljs-symbol>$</span> webpack --config XXX.js   <span class=hljs-comment>//使用另一份配置文件（比如webpack.config2.js）来打包</span>\\n\\n<span class=hljs-symbol>$</span> webpack --watch   <span class=hljs-comment>//监听变动并自动打包</span>\\n\\n<span class=hljs-symbol>$</span> webpack -p    <span class=hljs-comment>//压缩混淆脚本，这个非常非常重要！</span>\\n\\n<span class=hljs-symbol>$</span> webpack -d    <span class=hljs-comment>//生成map映射文件，告知哪些模块被最终打包到哪里了</span>\\n</code></pre> <hr> <h2 id=sublime-text-3->sublime text 3的安装</h2> <pre><code class=lang-bash>$ sudo<span class=hljs-built_in> add-apt-repository </span>ppa:webupd8team/sublime-text-3  \\n\\n$ sudo apt-get update    \\n\\n$ sudo apt-get install sublime-text-installer\\n</code></pre> <hr> <h2 id=google-chrome->google chrome安装</h2> <pre><code class=lang-bash>$ wget <span class=hljs-symbol>https:</span>/<span class=hljs-regexp>/dl.google.com/linux</span><span class=hljs-regexp>/direct/google</span>-chrome-stable_current_amd64.deb     \\n\\n$ sudo dpkg -i google-chrome-stable_current_amd64.deb    \\n\\n$ 控制台输入 <span class=hljs-string>`google-chrome`</span> 即可打开chrome浏览器，把它锁定到启动器吧～\\n</code></pre> <hr> <h2 id=linux-zip>Linux zip</h2> <blockquote> <ol> <li><p><code>zip -r myfile.zip ./*</code> 将当前目录下的所有文件和文件夹全部压缩成myfile.zip文件,－r表示递归压缩子目录下所有文件. </p> </li> <li><p>unzip <code>unzip -o -d /home/sunny myfile.zip</code><br>把myfile.zip文件解压到 /home/sunny/<br>-o:不提示的情况下覆盖文件；<br>-d:-d /home/sunny 指明将文件解压缩到/home/sunny目录下；</p> </li> <li><p><code>zip -d myfile.zip smart.txt</code><br>删除压缩文件中smart.txt文件<br>zip -m myfile.zip ./rpm_info.txt<br>向压缩文件中myfile.zip中添加rpm_info.txt文件 </p> </li> <li><p><code>zip -r filename.zip file1 file2 file3 /usr/work/school</code><br>上面的命令把 file1、file2、 file3、以及 /usr/work/school 目录的内容（假设这个目录存在）压缩起来，然后放入 filename.zip 文件中。 </p> </li> </ol> </blockquote> <h2 id=linux-tar-gz->Linux tar.gz解压</h2> <p>tar -zxvf 压缩文件名.tar.gz</p> <h2 id=vpn->VPN的搭建</h2> <ol> <li><p>首先需要准备一个文件<br>NetExtender.Linux.7.0.741.x86_64.tgz </p> </li> <li><p>安装压缩文件 </p> <p><code>tar -zxvf NetExtender.Linux.7.0.741.x86_64.tgz</code> </p> <p><code>cd netExtenderClient</code> </p> <p><code>sudo ./install</code> </p> </li> <li><p>图形化界面需要java环境支持，不安装图形化界面的略过～ </p> <p><code>sudo apt-get install openjdk-7-jre</code> </p> <p> 如果报错的话，使用下边方法： </p> <p><code>sudo add-apt-repository ppa:webupd8team/java</code> </p> <p><code>sudo apt-get update</code> </p> <p><code>sudo apt-get install oracle-java7-installer</code> </p> <p> 等待时间略长～～ </p> </li> <li><p>启动 </p> <p>在控制台输入 <code>netExtender</code> 即可～ </p> </li> </ol> <hr> <h2 id=-mysql>安装mysql</h2> <p> <code>sudo apt-get install mysql-server mysql-client</code> 安装mysql </p> <p> <code>service mysql start</code> 启动MySQL服务 </p> <p> <code>service mysql stop</code> 停止MySQL服务 </p> <p> <code>sudo mysqladmin -u root password newpassword</code> 修改 MySQL 的管理员密码 </p> <p> 设置远程访问(正常情况下，mysql占用的3306端口只是在IP 127.0.0.1上监听，拒绝了其他IP的访问（通过netstat可以查看到）。取消本地监</p> <p>听需要修改 my.cnf 文件：)：</p> <p> <code>sudo vi /etc/mysql/my.cnf</code></p> <p> <code>bind-address = 127.0.0.1</code> //找到此内容并且注释 </p> <h2 id=-x-gnome-pie>装X神器gnome-pie</h2> <p> <code>sudo add-apt-repository ppa:simonschneegans/testing -y</code> </p> <p> <code>sudo apt-get update &amp;&amp; sudo apt-get install gnome-pie</code> </p> <p> <code>gnome-pie</code> 即可启动应用 </p> <p> <code>ctrl+alt+a</code> 在鼠标处唤出 </p> <hr> <h2 id=chrome-nproxy->chrome 代理设置(nproxy)</h2> <ol> <li><p>SwitchySharp下载 </p> </li> <li><p>解压得到crx文件，拖到chrome扩展程序即可安装 </p> </li> <li><p>如图配置 </p> <p><img src=http://www.cat666.com/mydemo/images/SwitchySharp%20config.png alt=config> </p> </li> <li><p><code>npm install nproxy -g</code> </p> </li> <li><p><code>touch your_replace_rule.js</code> 填写你的替换规则 </p> </li> <li><p><code>nproxy -l your_replace_rule.js</code> 即可开启代理 </p> </li> </ol> <h1 id=->一些备忘操作</h1> <hr> <h2 id=->连接远程服务器</h2> <pre><code><span class=hljs-selector-tag>ssh</span> <span class=hljs-selector-tag>root</span>@<span class=hljs-keyword>192</span>.<span class=hljs-keyword>168</span>.<span class=hljs-keyword>1</span>.<span class=hljs-keyword>1</span>  \\n</code></pre><p> （root对应你使用的用户名，192……对应的服务器ip地址，一般服务器端口22，命令默认22.如果需要更改端口在ssh后面 -p 端口）</p> <h2 id=-terminal->修改terminal前面路径太长</h2> <p> 将 <code>export PS1=&quot;\\\\[\\\\e[32;1m\\\\]-&gt; \\\\[\\\\e[0m\\\\]&quot;</code> 添加到 ～/.bashrc 内，保存<br> 那么终端前面路径只会显示一个箭头～</p> <h2 id=-terminal->修改terminal不显示绝对路径，只显示当前路径</h2> <p>打开 ～/.bashrc </p> <pre><code class=lang-bash>if [ \"<span class=hljs-formula>$color_prompt\" = yes ]; then\\n    PS1=\\'$</span>{debian_chroot:+(<span class=hljs-formula>$debian_chroot)}<span class=hljs-tag>\\\\<span class=hljs-name>[</span></span><span class=hljs-tag>\\\\</span>033[01;32m<span class=hljs-tag>\\\\<span class=hljs-name>]</span></span><span class=hljs-tag>\\\\<span class=hljs-name>u</span></span>@<span class=hljs-tag>\\\\<span class=hljs-name>h</span></span><span class=hljs-tag>\\\\<span class=hljs-name>[</span></span><span class=hljs-tag>\\\\</span>033[00m<span class=hljs-tag>\\\\<span class=hljs-name>]</span></span>:<span class=hljs-tag>\\\\<span class=hljs-name>[</span></span><span class=hljs-tag>\\\\</span>033[01;34m<span class=hljs-tag>\\\\<span class=hljs-name>]</span></span><span class=hljs-tag>\\\\<span class=hljs-name>w</span></span><span class=hljs-tag>\\\\<span class=hljs-name>[</span></span><span class=hljs-tag>\\\\</span>033[00m<span class=hljs-tag>\\\\<span class=hljs-name>]</span></span><span class=hljs-tag>\\\\<span class=hljs-name>$</span></span> \\'\\nelse\\n    PS1=\\'$</span>{debian_chroot:+(<span class=hljs-formula>$debian_chroot)}<span class=hljs-tag>\\\\<span class=hljs-name>u</span></span>@<span class=hljs-tag>\\\\<span class=hljs-name>h</span></span>:<span class=hljs-tag>\\\\<span class=hljs-name>w</span></span><span class=hljs-tag>\\\\<span class=hljs-name>$</span></span> \\'\\nfi\\n    unset color_prompt force_color_prompt     //将w改成W，保存</span>\\n</code></pre> <h2 id=watch-enospc->watch ... ENOSPC报错</h2> <p>在使用gulp，grunt，gitbook等的watch功能时，如果出现watch...ENOSPC的报错，主要是因为watch需要监听很多文件的改动，但是fedora、ubuntu系统的文件句柄其实是有限制的，因此可以使用以下命令： </p> <p><code>$ echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf &amp;&amp; sudo sysctl -p</code></p> <h2 id=mysql->mysql导出</h2> <p>导出数据库：mysqldump -u 用户名 -p 数据库名 &gt; 导出的文件名 </p> <p>如我输入的命令行:mysqldump -u root -p news &gt; news.sql (输入后会让你输入进入MySQL的密码) </p> <p>（如果导出单张表的话在数据库名后面输入表名即可）</p> '}]);\n\n\n// WEBPACK FOOTER //\n// bundle.js"],"mappings":"AAAA","sourceRoot":""}